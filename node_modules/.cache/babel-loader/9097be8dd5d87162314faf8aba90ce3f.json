{"ast":null,"code":"import axios from \"axios\";\nimport * as Types from \"../Constants\";\nconst API_URL = `http://localhost:3001`;\nexport function login(loginData) {\n  let request = axios(`${API_URL}/auth/sign_in`, {\n    method: 'POST',\n    data: loginData\n  });\n  return dispatch => {\n    request.then(res => {\n      console.log('inside the login page', res);\n\n      if (res.data && res.data.data && res.data.data.success && res.statusText === 'OK') {\n        return dispatch({\n          type: Types.LOGIN_SUCCESS,\n          payload: res.data\n        });\n      } else {\n        return dispatch({\n          type: Types.LOGIN_FAIL,\n          payload: res.data\n        });\n      }\n    }).catch(error => {\n      console.log('respinse inside the rerr', error.toString());\n\n      if (error.toString() === 'Network Error') {\n        // conso\n        let error = {\n          response: {\n            error: {\n              data: {\n                success: false,\n                message: 'Network Error, Please connect to the server'\n              }\n            }\n          }\n        };\n        return dispatch({\n          type: Types.LOGIN_FAIL,\n          payload: error.response\n        });\n      } else {\n        return dispatch({\n          type: Types.LOGIN_FAIL,\n          payload: error.response\n        });\n      }\n    });\n  };\n}","map":{"version":3,"sources":["/home/santhosh/Desktop/auth-service/auth-service-client/src/Actions/auth-actions.js"],"names":["axios","Types","API_URL","login","loginData","request","method","data","dispatch","then","res","console","log","success","statusText","type","LOGIN_SUCCESS","payload","LOGIN_FAIL","catch","error","toString","response","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,cAAvB;AAEA,MAAMC,OAAO,GAAI,uBAAjB;AAEA,OAAO,SAASC,KAAT,CAAgBC,SAAhB,EAA2B;AAChC,MAAIC,OAAO,GAAGL,KAAK,CAAE,GAAEE,OAAQ,eAAZ,EAA4B;AAC7CI,IAAAA,MAAM,EAAE,MADqC;AAE7CC,IAAAA,IAAI,EAAEH;AAFuC,GAA5B,CAAnB;AAIA,SAAOI,QAAQ,IAAI;AACjBH,IAAAA,OAAO,CACJI,IADH,CACQC,GAAG,IAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,GAArC;;AACA,UACEA,GAAG,CAACH,IAAJ,IACAG,GAAG,CAACH,IAAJ,CAASA,IADT,IAEAG,GAAG,CAACH,IAAJ,CAASA,IAAT,CAAcM,OAFd,IAGAH,GAAG,CAACI,UAAJ,KAAmB,IAJrB,EAKE;AACA,eAAON,QAAQ,CAAC;AACdO,UAAAA,IAAI,EAAEd,KAAK,CAACe,aADE;AAEdC,UAAAA,OAAO,EAAEP,GAAG,CAACH;AAFC,SAAD,CAAf;AAID,OAVD,MAUO;AACL,eAAOC,QAAQ,CAAC;AACdO,UAAAA,IAAI,EAAEd,KAAK,CAACiB,UADE;AAEdD,UAAAA,OAAO,EAAEP,GAAG,CAACH;AAFC,SAAD,CAAf;AAID;AACF,KAnBH,EAoBGY,KApBH,CAoBSC,KAAK,IAAI;AACdT,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCQ,KAAK,CAACC,QAAN,EAAxC;;AACA,UAAID,KAAK,CAACC,QAAN,OAAqB,eAAzB,EAA0C;AACxC;AACA,YAAID,KAAK,GAAG;AACVE,UAAAA,QAAQ,EAAE;AACRF,YAAAA,KAAK,EAAE;AACLb,cAAAA,IAAI,EAAE;AACJM,gBAAAA,OAAO,EAAE,KADL;AAEJU,gBAAAA,OAAO,EAAE;AAFL;AADD;AADC;AADA,SAAZ;AAUA,eAAOf,QAAQ,CAAC;AACdO,UAAAA,IAAI,EAAEd,KAAK,CAACiB,UADE;AAEdD,UAAAA,OAAO,EAAEG,KAAK,CAACE;AAFD,SAAD,CAAf;AAID,OAhBD,MAgBO;AACL,eAAOd,QAAQ,CAAC;AACdO,UAAAA,IAAI,EAAEd,KAAK,CAACiB,UADE;AAEdD,UAAAA,OAAO,EAAEG,KAAK,CAACE;AAFD,SAAD,CAAf;AAID;AACF,KA5CH;AA6CD,GA9CD;AA+CD","sourcesContent":["import axios from \"axios\";\nimport * as Types from \"../Constants\";\n\nconst API_URL = `http://localhost:3001`;\n\nexport function login (loginData) {\n  let request = axios(`${API_URL}/auth/sign_in`, {\n    method: 'POST',\n    data: loginData\n  })\n  return dispatch => {\n    request\n      .then(res => {\n        console.log('inside the login page', res)\n        if (\n          res.data &&\n          res.data.data &&\n          res.data.data.success &&\n          res.statusText === 'OK'\n        ) {\n          return dispatch({\n            type: Types.LOGIN_SUCCESS,\n            payload: res.data\n          })\n        } else {\n          return dispatch({\n            type: Types.LOGIN_FAIL,\n            payload: res.data\n          })\n        }\n      })\n      .catch(error => {\n        console.log('respinse inside the rerr', error.toString())\n        if (error.toString() === 'Network Error') {\n          // conso\n          let error = {\n            response: {\n              error: {\n                data: {\n                  success: false,\n                  message: 'Network Error, Please connect to the server'\n                }\n              }\n            }\n          }\n          return dispatch({\n            type: Types.LOGIN_FAIL,\n            payload: error.response\n          })\n        } else {\n          return dispatch({\n            type: Types.LOGIN_FAIL,\n            payload: error.response\n          })\n        }\n      })\n  }\n}"]},"metadata":{},"sourceType":"module"}