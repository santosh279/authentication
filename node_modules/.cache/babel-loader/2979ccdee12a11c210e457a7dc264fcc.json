{"ast":null,"code":"import axios from \"axios\";\nimport * as Types from \"../Constants\";\nconst API_URL = `http://localhost:3001`;\nexport function login(loginData) {\n  let request = axios(`${API_URL}/auth/sign_in`, {\n    method: 'POST',\n    data: loginData\n  });\n  return dispatch => {\n    request.then(res => {\n      if (res.data && res.data.data && res.data.data.success && res.statusText === 'OK') {\n        return dispatch({\n          type: Types.LOGIN_SUCCESS,\n          payload: res.data\n        });\n      } else {\n        return dispatch({\n          type: Types.LOGIN_FAIL,\n          payload: res.data\n        });\n      }\n    }).catch(error => {\n      return dispatch({\n        type: Types.LOGIN_FAIL,\n        payload: error.response\n      });\n    });\n  };\n}\nexport function register(registerData) {\n  let request = axios(`${API_URL}/auth/sign_up`, {\n    method: 'POST',\n    data: registerData\n  });\n  return dispatch => {\n    request.then(res => {\n      if (res.data && res.data.success && res.data.message) {\n        return dispatch({\n          type: Types.REGISTER_SUCCESS,\n          payload: res.data\n        });\n      } else {\n        return dispatch({\n          type: Types.REGISTER_FAIL,\n          payload: res.data\n        });\n      }\n    }).catch(error => {\n      if (error.response.status === 400) {\n        return dispatch({\n          type: Types.REGISTER_FAIL,\n          payload: error.response\n        });\n      }\n    });\n  };\n}\nexport const sendOtp = contact => {\n  let request = axios(`${API_URL}/auth/send_otp`, {\n    method: 'POST',\n    data: contact\n  });\n  return dispatch => {\n    request.then(res => {\n      console.log(\"response insde\", res);\n\n      if (res.data && res.data.data.success && res.data.data.message) {\n        return dispatch({\n          type: Types.SEND_OTP_SUCCESS,\n          payload: res.data\n        });\n      } else {\n        return dispatch({\n          type: Types.SEND_OTP_FAIL,\n          payload: res.data\n        });\n      }\n    }).catch(error => {\n      return dispatch({\n        type: Types.SEND_OTP_FAIL,\n        payload: error.response\n      });\n    });\n  };\n};\nexport const verifyOtp = verifyData => {\n  let request = axios(`${API_URL}/auth/verify_otp?contact=${verifyData.contact}&otp=${verifyData.otp}`, {\n    method: 'GET'\n  });\n  return dispatch => {\n    request.then(res => {\n      if (res.data && res.data.data.success && res.data.data.message) {\n        return dispatch({\n          type: Types.SEND_OTP_SUCCESS,\n          payload: res.data\n        });\n      } else {\n        return dispatch({\n          type: Types.SEND_OTP_FAIL,\n          payload: res.data\n        });\n      }\n    }).catch(error => {\n      return dispatch({\n        type: Types.SEND_OTP_FAIL,\n        payload: error.response\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/home/santhosh/Desktop/auth-service/auth-service-client/src/Actions/auth-actions.js"],"names":["axios","Types","API_URL","login","loginData","request","method","data","dispatch","then","res","success","statusText","type","LOGIN_SUCCESS","payload","LOGIN_FAIL","catch","error","response","register","registerData","message","REGISTER_SUCCESS","REGISTER_FAIL","status","sendOtp","contact","console","log","SEND_OTP_SUCCESS","SEND_OTP_FAIL","verifyOtp","verifyData","otp"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport * as Types from \"../Constants\";\n\nconst API_URL = `http://localhost:3001`;\n\nexport function login(loginData) {\n  let request = axios(`${API_URL}/auth/sign_in`, {\n    method: 'POST',\n    data: loginData\n  })\n  return dispatch => {\n    request\n      .then(res => {\n        if (\n          res.data &&\n          res.data.data &&\n          res.data.data.success &&\n          res.statusText === 'OK'\n        ) {\n          return dispatch({\n            type: Types.LOGIN_SUCCESS,\n            payload: res.data\n          })\n        } else {\n          return dispatch({\n            type: Types.LOGIN_FAIL,\n            payload: res.data\n          })\n        }\n      })\n      .catch(error => {\n        return dispatch({\n          type: Types.LOGIN_FAIL,\n          payload: error.response\n        })\n      })\n  }\n}\n\nexport function register(registerData) {\n  let request = axios(`${API_URL}/auth/sign_up`, {\n    method: 'POST',\n    data: registerData\n  })\n  return dispatch => {\n    request\n      .then(res => {\n        if (\n          res.data &&\n          res.data.success &&\n          res.data.message\n        ) {\n          return dispatch({\n            type: Types.REGISTER_SUCCESS,\n            payload: res.data\n          })\n        } else {\n          return dispatch({\n            type: Types.REGISTER_FAIL,\n            payload: res.data\n          })\n        }\n      })\n      .catch(error => {\n        if (error.response.status === 400) {\n          return dispatch({\n            type: Types.REGISTER_FAIL,\n            payload: error.response\n          })\n        }\n      })\n  }\n}\n\nexport const sendOtp = (contact) => {\n  let request = axios(`${API_URL}/auth/send_otp`, {\n    method: 'POST',\n    data: contact\n  })\n  return dispatch => {\n    request\n      .then(res => {\n        console.log(\"response insde\", res)\n        if (\n          res.data &&\n          res.data.data.success &&\n          res.data.data.message\n        ) {\n          return dispatch({\n            type: Types.SEND_OTP_SUCCESS,\n            payload: res.data\n          })\n        } else {\n          return dispatch({\n            type: Types.SEND_OTP_FAIL,\n            payload: res.data\n          })\n        }\n      })\n      .catch(error => {\n        return dispatch({\n          type: Types.SEND_OTP_FAIL,\n          payload: error.response\n        })\n      })\n  }\n}\n\nexport const verifyOtp = (verifyData) => {\n  let request = axios(`${API_URL}/auth/verify_otp?contact=${verifyData.contact}&otp=${verifyData.otp}`, {\n    method: 'GET'\n  })\n  return dispatch => {\n    request\n      .then(res => {\n        if (\n          res.data &&\n          res.data.data.success &&\n          res.data.data.message\n        ) {\n          return dispatch({\n            type: Types.SEND_OTP_SUCCESS,\n            payload: res.data\n          })\n        } else {\n          return dispatch({\n            type: Types.SEND_OTP_FAIL,\n            payload: res.data\n          })\n        }\n      })\n      .catch(error => {\n        return dispatch({\n          type: Types.SEND_OTP_FAIL,\n          payload: error.response\n        })\n      })\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}