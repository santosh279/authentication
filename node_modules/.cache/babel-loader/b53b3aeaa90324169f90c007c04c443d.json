{"ast":null,"code":"var _jsxFileName = \"/home/santhosh/Desktop/auth-service/auth-service-client/src/Container/Register/register.js\";\nimport React from \"react\";\nimport RegisterView from \"../../Components/RegisterView/registerView\";\nimport * as Actions from \"../../Actions\";\nimport { connect } from \"react-redux\";\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      contact: \"\",\n      name: '',\n      confirmPassword: ''\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.register && nextProps.register.error && nextProps.register.error.data && !nextProps.register.error.data.success) {\n      this.setState({\n        respMessage: nextProps.register.error.data,\n        respSuccess: true\n      });\n    } else {\n      if (nextProps.response && nextProps.register.data && nextProps.register.data.success && nextProps.register.statusText === 'Created') {\n        this.setState({\n          respMessage: nextProps.register.data.message,\n          respSuccess: true\n        });\n      } else {\n        this.setState({\n          respMessage: nextProps.register.data.message,\n          respSuccess: true\n        });\n      }\n    }\n  }\n\n  handleSubmit(values, actions) {\n    const email = values.email,\n          password = values.password,\n          confirmPassword = values.confirmPassword,\n          contact = values.contact,\n          name = values.name;\n    const dispatch = this.props.dispatch;\n    dispatch(Actions.register({\n      email,\n      password,\n      confirmPassword,\n      contact,\n      name\n    }));\n  }\n\n  render() {\n    const _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password,\n          contact = _this$state.contact,\n          name = _this$state.name,\n          confirmPassword = _this$state.confirmPassword;\n    let initialValues = {\n      email,\n      password,\n      contact,\n      name,\n      confirmPassword\n    };\n    const handleSubmit = this.handleSubmit;\n    return React.createElement(RegisterView, {\n      initialValues: initialValues,\n      handleSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapState = state => {\n  return {\n    register: state.registerResp\n  };\n};\n\nexport default connect(mapState)(Register);","map":{"version":3,"sources":["/home/santhosh/Desktop/auth-service/auth-service-client/src/Container/Register/register.js"],"names":["React","RegisterView","Actions","connect","Register","Component","constructor","props","state","email","password","contact","name","confirmPassword","componentWillReceiveProps","nextProps","register","error","data","success","setState","respMessage","respSuccess","response","statusText","message","handleSubmit","values","actions","dispatch","render","initialValues","mapState","registerResp"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport RegisterView from \"../../Components/RegisterView/registerView\"\nimport * as Actions from \"../../Actions\";\nimport { connect } from \"react-redux\";\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      contact: \"\",\n      name: '',\n      confirmPassword: ''\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      nextProps.register &&\n      nextProps.register.error &&\n      nextProps.register.error.data &&\n      !nextProps.register.error.data.success\n    ) {\n      this.setState({\n        respMessage: nextProps.register.error.data,\n        respSuccess: true\n      })\n    } else {\n      if (\n        nextProps.response &&\n        nextProps.register.data &&\n        nextProps.register.data.success &&\n        nextProps.register.statusText === 'Created'\n      ) {\n        this.setState({\n          respMessage: nextProps.register.data.message,\n          respSuccess: true\n        })\n      } else {\n        this.setState({\n          respMessage: nextProps.register.data.message,\n          respSuccess: true\n        })\n      }\n    }\n  }\n\n  handleSubmit(values, actions) {\n    const { email, password, confirmPassword, contact, name } = values\n    const { dispatch } = this.props\n    dispatch(Actions.register({ email, password, confirmPassword, contact, name }))\n  }\n\n  render() {\n    const { email, password, contact, name, confirmPassword } = this.state;\n    let initialValues = {\n      email, password, contact, name, confirmPassword\n    }\n    const { handleSubmit } = this\n    return (\n      <RegisterView\n        initialValues={initialValues}\n        handleSubmit={handleSubmit}\n      />\n    )\n  }\n}\n\nconst mapState = (state) => {\n  return {\n    register: state.registerResp\n  }\n}\n\nexport default connect(mapState)(Register)"]},"metadata":{},"sourceType":"module"}