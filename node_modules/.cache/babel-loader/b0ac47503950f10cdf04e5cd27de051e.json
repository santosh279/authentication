{"ast":null,"code":"var _jsxFileName = \"/home/santhosh/Desktop/auth-service/auth-service-client/src/Container/login/login.js\";\nimport React from \"react\";\nimport * as Actions from \"../../Actions\";\nimport LoginView from \"../../Components/LoginView/loginView\";\nimport { connect } from \"react-redux\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      respMessage: '',\n      respSuccess: false,\n      onClick: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(values, actions) {\n    const email = values.email,\n          password = values.password;\n    const dispatch = this.props.dispatch;\n\n    if (email && password) {\n      dispatch(Actions.login({\n        email,\n        password\n      }));\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.response && nextProps.response.error && nextProps.response.error.data && !nextProps.response.error.data.success) {\n      this.setState({\n        respMessage: nextProps.response.error.data.message ? nextProps.response.error.data.message : nextProps.response.error.data.error.message,\n        respSuccess: true\n      });\n    } else {\n      if (nextProps.response && nextProps.response.data.data && nextProps.response.data.data.success) {\n        this.setState({\n          respMessage: nextProps.response.data.data.message,\n          respSuccess: true\n        });\n        let access_token = JSON.stringify(nextProps.response.data.data.accessToken);\n        localStorage.setItem('access_token', access_token);\n        window.location.href = '/orders'; // nextProps.history.push('/orders')\n      } else {\n        this.setState({\n          respMessage: nextProps.response.data.message,\n          respSuccess: true\n        });\n      }\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n    const handleSubmit = this.handleSubmit;\n    let initialValues = {\n      email,\n      password\n    };\n    return React.createElement(LoginView, {\n      initialValues: initialValues,\n      handleSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    response: state.loginResp\n  };\n};\n\nexport default connect(mapStateToProps)(Login);","map":{"version":3,"sources":["/home/santhosh/Desktop/auth-service/auth-service-client/src/Container/login/login.js"],"names":["React","Actions","LoginView","connect","Login","Component","constructor","props","state","email","password","respMessage","respSuccess","onClick","handleSubmit","bind","values","actions","dispatch","login","getDerivedStateFromProps","nextProps","prevState","response","error","data","success","setState","message","access_token","JSON","stringify","accessToken","localStorage","setItem","window","location","href","render","initialValues","mapStateToProps","loginResp"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as Actions from \"../../Actions\"\nimport LoginView from \"../../Components/LoginView/loginView\";\nimport { connect } from \"react-redux\"\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      respMessage: '',\n      respSuccess: false,\n      onClick: false,\n    }\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(values, actions) {\n    const { email, password } = values\n    const { dispatch } = this.props\n    if (email && password) {\n      dispatch(Actions.login({ email, password }))\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (\n      nextProps.response &&\n      nextProps.response.error &&\n      nextProps.response.error.data &&\n      !nextProps.response.error.data.success\n    ) {\n      this.setState({\n        respMessage: nextProps.response.error.data.message\n          ? nextProps.response.error.data.message\n          : nextProps.response.error.data.error.message,\n        respSuccess: true\n      })\n    } else {\n      if (\n        nextProps.response &&\n        nextProps.response.data.data &&\n        nextProps.response.data.data.success\n      ) {\n        this.setState({\n          respMessage: nextProps.response.data.data.message,\n          respSuccess: true\n        })\n        let access_token = JSON.stringify(\n          nextProps.response.data.data.accessToken\n        )\n        localStorage.setItem('access_token', access_token)\n        window.location.href = '/orders'\n        // nextProps.history.push('/orders')\n      } else {\n        this.setState({\n          respMessage: nextProps.response.data.message,\n          respSuccess: true\n        })\n      }\n    }\n  }\n\n  render() {\n    const { email, password } = this.state;\n    const { handleSubmit } = this;\n    let initialValues = {\n      email, password\n    }\n    return (\n      <LoginView\n        initialValues={initialValues}\n        handleSubmit={handleSubmit}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    response: state.loginResp\n  }\n}\n\nexport default connect(mapStateToProps)(Login);"]},"metadata":{},"sourceType":"module"}