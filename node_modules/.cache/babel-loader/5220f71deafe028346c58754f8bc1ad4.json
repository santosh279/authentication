{"ast":null,"code":"var _jsxFileName = \"/home/santhosh/Desktop/auth-service/auth-service-client/src/Container/MobileAuth/sendOtp.js\";\nimport React from \"react\";\nimport SendOtpView from \"../../Components/Mobile/sendOtpView\";\nimport * as Actions from \"../../Actions\";\nimport { connect } from \"react-redux\";\nimport CheckOtp from \"./verifyOtp\";\n\nclass SendOtp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = () => {\n      this.setState({\n        respSuccess: false\n      });\n    };\n\n    this.state = {\n      contact: \"\",\n      respMessage: '',\n      respSuccess: false,\n      onClick: false,\n      verify: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.sentOtp && nextProps.sentOtp.error && nextProps.sentOtp.error.data && !nextProps.sentOtp.error.data.success) {\n      this.setState({\n        respMessage: nextProps.sentOtp.error.data.message ? nextProps.sentOtp.error.data.message : nextProps.sentOtp.error.data.error.message,\n        respSuccess: true\n      });\n    } else {\n      if (nextProps.sentOtp && nextProps.sentOtp.data.data && nextProps.sentOtp.data.data.success) {\n        this.setState({\n          respMessage: nextProps.sentOtp.data.data.message,\n          respSuccess: true,\n          verify: true,\n          contact: nextProps.sentOtp.data.data.contact\n        }); // eslint-disable-next-line no-unused-expressions\n        // <CheckOtp \n        //   contact = { this.state.contact }\n        // />\n\n        window.location.href = '/verify_otp';\n      } else {\n        this.setState({\n          respMessage: nextProps.sentOtp.data.message,\n          respSuccess: true\n        });\n      }\n    }\n  }\n\n  handleSubmit(values, actions) {\n    const contact = values.contact;\n    const dispatch = this.props.dispatch;\n    dispatch(Actions.sendOtp({\n      contact\n    }));\n  }\n\n  render() {\n    const _this$state = this.state,\n          contact = _this$state.contact,\n          respSuccess = _this$state.respSuccess,\n          respMessage = _this$state.respMessage,\n          successMessage = _this$state.successMessage;\n    let initialValues = {\n      contact\n    };\n    const handleSubmit = this.handleSubmit,\n          handleClose = this.handleClose;\n    return React.createElement(SendOtpView, {\n      initialValues: initialValues,\n      handleSubmit: handleSubmit,\n      handleClose: handleClose,\n      respSuccess: respSuccess,\n      respMessage: respMessage,\n      successMessage: successMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapState = state => {\n  return {\n    sentOtp: state.sendOtpResp\n  };\n};\n\nexport default connect(mapState)(SendOtp);","map":{"version":3,"sources":["/home/santhosh/Desktop/auth-service/auth-service-client/src/Container/MobileAuth/sendOtp.js"],"names":["React","SendOtpView","Actions","connect","CheckOtp","SendOtp","Component","constructor","props","handleClose","setState","respSuccess","state","contact","respMessage","onClick","verify","handleSubmit","bind","componentWillReceiveProps","nextProps","sentOtp","error","data","success","message","window","location","href","values","actions","dispatch","sendOtp","render","successMessage","initialValues","mapState","sendOtpResp"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,eAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAEA,MAAMC,OAAN,SAAsBL,KAAK,CAACM,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA0DnBC,WA1DmB,GA0DL,MAAM;AAClB,WAAKC,QAAL,CAAc;AACZC,QAAAA,WAAW,EAAE;AADD,OAAd;AAGD,KA9DkB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,WAAW,EAAE,EAFF;AAGXH,MAAAA,WAAW,EAAE,KAHF;AAIXI,MAAAA,OAAO,EAAE,KAJE;AAKXC,MAAAA,MAAM,EAAE;AALG,KAAb;AAOA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDC,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC,QACEA,SAAS,CAACC,OAAV,IACAD,SAAS,CAACC,OAAV,CAAkBC,KADlB,IAEAF,SAAS,CAACC,OAAV,CAAkBC,KAAlB,CAAwBC,IAFxB,IAGA,CAACH,SAAS,CAACC,OAAV,CAAkBC,KAAlB,CAAwBC,IAAxB,CAA6BC,OAJhC,EAKE;AACA,WAAKd,QAAL,CAAc;AACZI,QAAAA,WAAW,EAAEM,SAAS,CAACC,OAAV,CAAkBC,KAAlB,CAAwBC,IAAxB,CAA6BE,OAA7B,GACTL,SAAS,CAACC,OAAV,CAAkBC,KAAlB,CAAwBC,IAAxB,CAA6BE,OADpB,GAETL,SAAS,CAACC,OAAV,CAAkBC,KAAlB,CAAwBC,IAAxB,CAA6BD,KAA7B,CAAmCG,OAH3B;AAIZd,QAAAA,WAAW,EAAE;AAJD,OAAd;AAMD,KAZD,MAYO;AACL,UACGS,SAAS,CAACC,OAAV,IACCD,SAAS,CAACC,OAAV,CAAkBE,IAAlB,CAAuBA,IADxB,IAECH,SAAS,CAACC,OAAV,CAAkBE,IAAlB,CAAuBA,IAAvB,CAA4BC,OAHhC,EAIE;AACA,aAAKd,QAAL,CAAc;AACZI,UAAAA,WAAW,EAAEM,SAAS,CAACC,OAAV,CAAkBE,IAAlB,CAAuBA,IAAvB,CAA4BE,OAD7B;AAEZd,UAAAA,WAAW,EAAE,IAFD;AAGZK,UAAAA,MAAM,EAAE,IAHI;AAIZH,UAAAA,OAAO,EAAEO,SAAS,CAACC,OAAV,CAAkBE,IAAlB,CAAuBA,IAAvB,CAA4BV;AAJzB,SAAd,EADA,CAOE;AACA;AACA;AACA;;AACAa,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,aAAvB;AACH,OAhBD,MAgBO;AACL,aAAKlB,QAAL,CAAc;AACZI,UAAAA,WAAW,EAAEM,SAAS,CAACC,OAAV,CAAkBE,IAAlB,CAAuBE,OADxB;AAEZd,UAAAA,WAAW,EAAE;AAFD,SAAd;AAID;AACF;AACF;;AAEDM,EAAAA,YAAY,CAACY,MAAD,EAASC,OAAT,EAAkB;AAAA,UACpBjB,OADoB,GACRgB,MADQ,CACpBhB,OADoB;AAAA,UAEpBkB,QAFoB,GAEP,KAAKvB,KAFE,CAEpBuB,QAFoB;AAG5BA,IAAAA,QAAQ,CAAC7B,OAAO,CAAC8B,OAAR,CAAgB;AAAEnB,MAAAA;AAAF,KAAhB,CAAD,CAAR;AACD;;AASDoB,EAAAA,MAAM,GAAG;AAAA,wBAE0C,KAAKrB,KAF/C;AAAA,UACCC,OADD,eACCA,OADD;AAAA,UAEHF,WAFG,eAEHA,WAFG;AAAA,UAEUG,WAFV,eAEUA,WAFV;AAAA,UAEuBoB,cAFvB,eAEuBA,cAFvB;AAGP,QAAIC,aAAa,GAAG;AAAEtB,MAAAA;AAAF,KAApB;AAHO,UAICI,YAJD,GAI+B,IAJ/B,CAICA,YAJD;AAAA,UAIeR,WAJf,GAI+B,IAJ/B,CAIeA,WAJf;AAKP,WACE,oBAAC,WAAD;AACE,MAAA,aAAa,EAAE0B,aADjB;AAEE,MAAA,YAAY,EAAElB,YAFhB;AAGE,MAAA,WAAW,EAAER,WAHf;AAIE,MAAA,WAAW,EAAEE,WAJf;AAKE,MAAA,WAAW,EAAEG,WALf;AAME,MAAA,cAAc,EAAEoB,cANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD;;AAhFmC;;AAoFtC,MAAME,QAAQ,GAAIxB,KAAD,IAAW;AAC1B,SAAO;AACLS,IAAAA,OAAO,EAAET,KAAK,CAACyB;AADV,GAAP;AAGD,CAJD;;AAMA,eAAelC,OAAO,CAACiC,QAAD,CAAP,CAAkB/B,OAAlB,CAAf","sourcesContent":["import React from \"react\";\nimport SendOtpView from \"../../Components/Mobile/sendOtpView\"\nimport * as Actions from \"../../Actions\";\nimport { connect } from \"react-redux\";\nimport CheckOtp from \"./verifyOtp\";\n\nclass SendOtp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contact: \"\",\n      respMessage: '',\n      respSuccess: false,\n      onClick: false,\n      verify: false\n    }\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      nextProps.sentOtp &&\n      nextProps.sentOtp.error &&\n      nextProps.sentOtp.error.data &&\n      !nextProps.sentOtp.error.data.success\n    ) {\n      this.setState({\n        respMessage: nextProps.sentOtp.error.data.message\n          ? nextProps.sentOtp.error.data.message\n          : nextProps.sentOtp.error.data.error.message,\n        respSuccess: true\n      })\n    } else {\n      if (\n        (nextProps.sentOtp &&\n          nextProps.sentOtp.data.data &&\n          nextProps.sentOtp.data.data.success)\n      ) {\n        this.setState({\n          respMessage: nextProps.sentOtp.data.data.message,\n          respSuccess: true,\n          verify: true,\n          contact: nextProps.sentOtp.data.data.contact\n        })\n          // eslint-disable-next-line no-unused-expressions\n          // <CheckOtp \n          //   contact = { this.state.contact }\n          // />\n          window.location.href = '/verify_otp'\n      } else {\n        this.setState({\n          respMessage: nextProps.sentOtp.data.message,\n          respSuccess: true\n        })\n      }\n    }\n  }\n\n  handleSubmit(values, actions) {\n    const { contact } = values\n    const { dispatch } = this.props\n    dispatch(Actions.sendOtp({ contact }))\n  }\n\n\n  handleClose = () => {\n    this.setState({\n      respSuccess: false\n    })\n  }\n\n  render() {\n    const { contact\n      , respSuccess, respMessage, successMessage } = this.state;\n    let initialValues = { contact }\n    const { handleSubmit, handleClose } = this\n    return (\n      <SendOtpView\n        initialValues={initialValues}\n        handleSubmit={handleSubmit}\n        handleClose={handleClose}\n        respSuccess={respSuccess}\n        respMessage={respMessage}\n        successMessage={successMessage}\n      />\n    )\n  }\n}\n\n\nconst mapState = (state) => {\n  return {\n    sentOtp: state.sendOtpResp\n  }\n}\n\nexport default connect(mapState)(SendOtp)"]},"metadata":{},"sourceType":"module"}