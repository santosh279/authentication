{"ast":null,"code":"var _jsxFileName = \"/home/santhosh/Desktop/auth-service/auth-service-client/src/Components/RegisterView/registerView.jsx\";\nimport React from \"react\";\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup'; // import { Snackbar } from '@material-ui/core'\n\nconst RegisterView = props => {\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    initialValues: props.initialValues,\n    validationSchema: Yup.object().shape({\n      name: Yup.string().required('Name is required'),\n      email: Yup.string().email('Email is invalid').required('Email is required'),\n      password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required'),\n      confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match').required('Confirm Password is required'),\n      contact: Yup.number().required('contact is required')\n    }),\n    onSubmit: (values, actions) => {\n      props.handleSubmit(values, actions);\n    },\n    render: ({\n      errors,\n      status,\n      touched\n    }) => React.createElement(\"div\", {\n      className: \"row\",\n      style: {\n        marginLeft: '130px',\n        marginTop: '50px',\n        marginRight: '-50px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6 offset-md-3\",\n      style: {\n        maxWidth: '35%',\n        position: 'absolute'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Register\")), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Name\"), React.createElement(Field, {\n      name: \"firstName\",\n      type: \"text\",\n      className: 'form-control' + (errors.name && touched.name ? ' is-invalid' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"name\",\n      component: \"div\",\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"contact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Contact\"), React.createElement(Field, {\n      name: \"contact\",\n      type: \"number\",\n      className: 'form-control' + (errors.contact && touched.contact ? ' is-invalid' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"contact\",\n      component: \"div\",\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Field, {\n      name: \"email\",\n      type: \"text\",\n      className: 'form-control' + (errors.email && touched.email ? ' is-invalid' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"email\",\n      component: \"div\",\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Field, {\n      name: \"password\",\n      type: \"password\",\n      className: 'form-control' + (errors.password && touched.password ? ' is-invalid' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"password\",\n      component: \"div\",\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"confirmPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Confirm Password\"), React.createElement(Field, {\n      name: \"confirmPassword\",\n      type: \"password\",\n      className: 'form-control' + (errors.confirmPassword && touched.confirmPassword ? ' is-invalid' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"confirmPassword\",\n      component: \"div\",\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"b ph4 pv2 input-reset ba b--black bg-transparent  pointer f6 dib\",\n      type: \"submit\",\n      value: \"Register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      href: \"/sign_in\",\n      className: \"b ph4 ba b--black bg-transparent pointer f6 dib\",\n      style: {\n        marginLeft: '10px',\n        color: 'black',\n        paddingBottom: '5px',\n        paddingTop: '5px',\n        textDecoration: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"back\"))))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }));\n};\n\nexport default RegisterView;","map":{"version":3,"sources":["/home/santhosh/Desktop/auth-service/auth-service-client/src/Components/RegisterView/registerView.jsx"],"names":["React","Formik","Field","Form","ErrorMessage","Yup","RegisterView","props","initialValues","object","shape","name","string","required","email","password","min","confirmPassword","oneOf","ref","contact","number","values","actions","handleSubmit","errors","status","touched","marginLeft","marginTop","marginRight","maxWidth","position","color","paddingBottom","paddingTop","textDecoration"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Formik, Field, Form, ErrorMessage } from 'formik'\nimport * as Yup from 'yup';\n// import { Snackbar } from '@material-ui/core'\n\nconst RegisterView = (props) => {\n  return (\n    <React.Fragment>\n      <Formik\n        initialValues={props.initialValues}\n        validationSchema={Yup.object().shape({\n          name: Yup.string().required('Name is required'),\n          email: Yup.string()\n            .email('Email is invalid')\n            .required('Email is required'),\n          password: Yup.string()\n            .min(6, 'Password must be at least 6 characters')\n            .required('Password is required'),\n          confirmPassword: Yup.string()\n            .oneOf([Yup.ref('password'), null], 'Passwords must match')\n            .required('Confirm Password is required'),\n          contact: Yup.number().required('contact is required')\n        })}\n        onSubmit={(values, actions) => {\n          props.handleSubmit(values, actions)\n        }}\n        render={({ errors, status, touched }) => (\n          <div\n            className='row'\n            style={{\n              marginLeft: '130px',\n              marginTop: '50px',\n              marginRight: '-50px'\n            }}\n          >\n            <div\n              className='col-md-6 offset-md-3'\n              style={{ maxWidth: '35%', position: 'absolute' }}\n            >\n              <Form>\n                <div>\n                  <h4>Register</h4>\n                </div>\n                <div className='form-group'>\n                  <label htmlFor='name'>Name</label>\n                  <Field\n                    name='firstName'\n                    type='text'\n                    className={\n                      'form-control' +\n                      (errors.name && touched.name\n                        ? ' is-invalid'\n                        : '')\n                    }\n                  />\n                  <ErrorMessage\n                    name='name'\n                    component='div'\n                    className='invalid-feedback'\n                  />\n                </div>\n                <div className='form-group'>\n                  <label htmlFor='contact'>Contact</label>\n                  <Field\n                    name='contact'\n                    type='number'\n                    className={\n                      'form-control' +\n                      (errors.contact && touched.contact ? ' is-invalid' : '')\n                    }\n                  />\n                  <ErrorMessage\n                    name='contact'\n                    component='div'\n                    className='invalid-feedback'\n                  />\n                </div>\n                <div className='form-group'>\n                  <label htmlFor='email'>Email</label>\n                  <Field\n                    name='email'\n                    type='text'\n                    className={\n                      'form-control' +\n                      (errors.email && touched.email ? ' is-invalid' : '')\n                    }\n                  />\n                  <ErrorMessage\n                    name='email'\n                    component='div'\n                    className='invalid-feedback'\n                  />\n                </div>\n                <div className='form-group'>\n                  <label htmlFor='password'>Password</label>\n                  <Field\n                    name='password'\n                    type='password'\n                    className={\n                      'form-control' +\n                      (errors.password && touched.password ? ' is-invalid' : '')\n                    }\n                  />\n                  <ErrorMessage\n                    name='password'\n                    component='div'\n                    className='invalid-feedback'\n                  />\n                </div>\n                <div className='form-group'>\n                  <label htmlFor='confirmPassword'>Confirm Password</label>\n                  <Field\n                    name='confirmPassword'\n                    type='password'\n                    className={\n                      'form-control' +\n                      (errors.confirmPassword && touched.confirmPassword\n                        ? ' is-invalid'\n                        : '')\n                    }\n                  />\n                  <ErrorMessage\n                    name='confirmPassword'\n                    component='div'\n                    className='invalid-feedback'\n                  />\n                </div>\n                <div className='form-group'>\n                  <input\n                    className='b ph4 pv2 input-reset ba b--black bg-transparent  pointer f6 dib'\n                    type='submit'\n                    value='Register'\n                  />\n                  <a\n                    href='/sign_in'\n                    className='b ph4 ba b--black bg-transparent pointer f6 dib'\n                    style={{\n                      marginLeft: '10px',\n                      color: 'black',\n                      paddingBottom: '5px',\n                      paddingTop: '5px',\n                      textDecoration: 'none'\n                    }}\n                  >\n                    back\n                  </a>\n                </div>\n              </Form>\n              {/* <Snackbar\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                onClose={this.handleClose}\n                open={this.state.respSuccess}\n                message={this.state.respMessage}\n                autoHideDuration={4000}\n              /> */}\n            </div>\n          </div>\n        )}\n      />\n    </React.Fragment>\n  )\n}\n\nexport default RegisterView;"]},"metadata":{},"sourceType":"module"}