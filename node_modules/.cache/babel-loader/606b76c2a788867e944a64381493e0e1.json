{"ast":null,"code":"var _jsxFileName = \"/home/santhosh/Desktop/auth-service/auth-service-client/src/Components/RegisterView/registerView.jsx\";\nimport React from \"react\";\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { Snackbar } from '@material-ui/core';\n\nconst RegisterView = props => {\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      userName: ''\n    },\n    validationSchema: Yup.object().shape({\n      firstName: Yup.string().required('First Name is required'),\n      lastName: Yup.string().required('Last Name is required'),\n      email: Yup.string().email('Email is invalid').required('Email is required'),\n      password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required'),\n      confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match').required('Confirm Password is required'),\n      userName: Yup.string().required('userName is required')\n    }),\n    onSubmit: (values, actions) => {\n      this.askForConfirmation(values, actions);\n    },\n    render: ({\n      errors,\n      status,\n      touched\n    }) => React.createElement(\"div\", {\n      class: \"row\",\n      style: {\n        marginLeft: '130px',\n        marginTop: '50px',\n        marginRight: '-50px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col-md-6 offset-md-3\",\n      style: {\n        maxWidth: '35%',\n        position: 'absolute'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Register\")), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"firstName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(Field, {\n      name: \"firstName\",\n      type: \"text\",\n      className: 'form-control' + (errors.firstName && touched.firstName ? ' is-invalid' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"firstName\",\n      component: \"div\",\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"lastName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(Field, {\n      name: \"lastName\",\n      type: \"text\",\n      className: 'form-control' + (errors.lastName && touched.lastName ? ' is-invalid' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"lastName\",\n      component: \"div\",\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"userName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"User Name\"), React.createElement(Field, {\n      name: \"userName\",\n      type: \"text\",\n      className: 'form-control' + (errors.userName && touched.userName ? ' is-invalid' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"lastName\",\n      component: \"div\",\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Field, {\n      name: \"email\",\n      type: \"text\",\n      className: 'form-control' + (errors.email && touched.email ? ' is-invalid' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"email\",\n      component: \"div\",\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Field, {\n      name: \"password\",\n      type: \"password\",\n      className: 'form-control' + (errors.password && touched.password ? ' is-invalid' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"password\",\n      component: \"div\",\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"confirmPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Confirm Password\"), React.createElement(Field, {\n      name: \"confirmPassword\",\n      type: \"password\",\n      className: 'form-control' + (errors.confirmPassword && touched.confirmPassword ? ' is-invalid' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"confirmPassword\",\n      component: \"div\",\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      class: \"b ph4 pv2 input-reset ba b--black bg-transparent  pointer f6 dib\",\n      type: \"submit\",\n      value: \"Register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      href: \"/login\",\n      class: \"b ph4 ba b--black bg-transparent pointer f6 dib\",\n      style: {\n        marginLeft: '10px',\n        color: 'black',\n        paddingBottom: '5px',\n        paddingTop: '5px',\n        textDecoration: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"back\"))), React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      onClose: this.handleClose,\n      open: this.state.respSuccess,\n      message: this.state.respMessage,\n      autoHideDuration: 4000,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }));\n};\n\nexport default RegisterView;","map":{"version":3,"sources":["/home/santhosh/Desktop/auth-service/auth-service-client/src/Components/RegisterView/registerView.jsx"],"names":["React","Formik","Field","Form","ErrorMessage","Yup","Snackbar","RegisterView","props","firstName","lastName","email","password","confirmPassword","userName","object","shape","string","required","min","oneOf","ref","values","actions","askForConfirmation","errors","status","touched","marginLeft","marginTop","marginRight","maxWidth","position","color","paddingBottom","paddingTop","textDecoration","vertical","horizontal","handleClose","state","respSuccess","respMessage"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Formik, Field, Form, ErrorMessage } from 'formik'\nimport * as Yup from 'yup';\nimport { Snackbar } from '@material-ui/core'\n\nconst RegisterView = (props) => {\n  return(\n    <React.Fragment>\n         <Formik\n        initialValues={{\n          firstName: '',\n          lastName: '',\n          email: '',\n          password: '',\n          confirmPassword: '',\n          userName: ''\n        }}\n        validationSchema={Yup.object().shape({\n          firstName: Yup.string().required('First Name is required'),\n          lastName: Yup.string().required('Last Name is required'),\n          email: Yup.string()\n            .email('Email is invalid')\n            .required('Email is required'),\n          password: Yup.string()\n            .min(6, 'Password must be at least 6 characters')\n            .required('Password is required'),\n          confirmPassword: Yup.string()\n            .oneOf([Yup.ref('password'), null], 'Passwords must match')\n            .required('Confirm Password is required'),\n          userName: Yup.string().required('userName is required')\n        })}\n        onSubmit={(values, actions) => {\n          this.askForConfirmation(values, actions)\n        }}\n        render={({ errors, status, touched }) => (\n          <div\n            class='row'\n            style={{\n              marginLeft: '130px',\n              marginTop: '50px',\n              marginRight: '-50px'\n            }}\n          >\n            <div\n              class='col-md-6 offset-md-3'\n              style={{ maxWidth: '35%', position: 'absolute' }}\n            >\n              <Form>\n                <div>\n                  <h4>Register</h4>\n                </div>\n                <div className='form-group'>\n                  <label htmlFor='firstName'>First Name</label>\n                  <Field\n                    name='firstName'\n                    type='text'\n                    className={\n                      'form-control' +\n                      (errors.firstName && touched.firstName\n                        ? ' is-invalid'\n                        : '')\n                    }\n                  />\n                  <ErrorMessage\n                    name='firstName'\n                    component='div'\n                    className='invalid-feedback'\n                  />\n                </div>\n\n                <div className='form-group'>\n                  <label htmlFor='lastName'>Last Name</label>\n                  <Field\n                    name='lastName'\n                    type='text'\n                    className={\n                      'form-control' +\n                      (errors.lastName && touched.lastName ? ' is-invalid' : '')\n                    }\n                  />\n                  <ErrorMessage\n                    name='lastName'\n                    component='div'\n                    className='invalid-feedback'\n                  />\n                </div>\n                <div className='form-group'>\n                  <label htmlFor='userName'>User Name</label>\n                  <Field\n                    name='userName'\n                    type='text'\n                    className={\n                      'form-control' +\n                      (errors.userName && touched.userName ? ' is-invalid' : '')\n                    }\n                  />\n                  <ErrorMessage\n                    name='lastName'\n                    component='div'\n                    className='invalid-feedback'\n                  />\n                </div>\n                <div className='form-group'>\n                  <label htmlFor='email'>Email</label>\n                  <Field\n                    name='email'\n                    type='text'\n                    className={\n                      'form-control' +\n                      (errors.email && touched.email ? ' is-invalid' : '')\n                    }\n                  />\n                  <ErrorMessage\n                    name='email'\n                    component='div'\n                    className='invalid-feedback'\n                  />\n                </div>\n                <div className='form-group'>\n                  <label htmlFor='password'>Password</label>\n                  <Field\n                    name='password'\n                    type='password'\n                    className={\n                      'form-control' +\n                      (errors.password && touched.password ? ' is-invalid' : '')\n                    }\n                  />\n                  <ErrorMessage\n                    name='password'\n                    component='div'\n                    className='invalid-feedback'\n                  />\n                </div>\n                <div className='form-group'>\n                  <label htmlFor='confirmPassword'>Confirm Password</label>\n                  <Field\n                    name='confirmPassword'\n                    type='password'\n                    className={\n                      'form-control' +\n                      (errors.confirmPassword && touched.confirmPassword\n                        ? ' is-invalid'\n                        : '')\n                    }\n                  />\n                  <ErrorMessage\n                    name='confirmPassword'\n                    component='div'\n                    className='invalid-feedback'\n                  />\n                </div>\n                <div className='form-group'>\n                  <input\n                    class='b ph4 pv2 input-reset ba b--black bg-transparent  pointer f6 dib'\n                    type='submit'\n                    value='Register'\n                  />\n                  <a\n                    href='/login'\n                    class='b ph4 ba b--black bg-transparent pointer f6 dib'\n                    style={{\n                      marginLeft: '10px',\n                      color: 'black',\n                      paddingBottom: '5px',\n                      paddingTop: '5px',\n                      textDecoration: 'none'\n                    }}\n                  >\n                    back\n                  </a>\n                </div>\n              </Form>\n              <Snackbar\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                onClose={this.handleClose}\n                open={this.state.respSuccess}\n                message={this.state.respMessage}\n                autoHideDuration={4000}\n              />\n            </div>\n          </div>\n        )}\n      />\n    </React.Fragment>\n  )\n}\n\nexport default RegisterView;"]},"metadata":{},"sourceType":"module"}