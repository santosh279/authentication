{"ast":null,"code":"var _jsxFileName = \"/home/santhosh/Desktop/auth-service/auth-service-client/src/Container/Register/register.js\";\nimport React from \"react\";\nimport RegisterView from \"../../Components/RegisterView/registerView\";\nimport * as Actions from \"../../Actions\";\nimport { connect } from \"react-redux\";\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = () => {\n      this.setState({\n        respSuccess: false\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      contact: \"\",\n      name: '',\n      confirmPassword: '',\n      errorMessage: [],\n      respMessage: '',\n      respSuccess: false,\n      onClick: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.register && nextProps.register.error && nextProps.register.error.data && !nextProps.register.error.data.success) {\n      console.log(\"inside the nextProps\", nextProps.register.error.data);\n      this.setState({\n        respMessage: nextProps.register.error.data,\n        respSuccess: true\n      }, () => {\n        console.log(respMessage);\n      });\n    } else {\n      if (nextProps.response && nextProps.register.data && nextProps.register.data.success && nextProps.register.statusText === 'Created') {\n        this.setState({\n          respMessage: nextProps.register.data.message,\n          respSuccess: true\n        });\n      } else {\n        this.setState({\n          respMessage: nextProps.register.data.message,\n          respSuccess: true\n        });\n      }\n    }\n  }\n\n  handleSubmit(values, actions) {\n    console.log(\"inside the handle submit\", values);\n    const email = values.email,\n          password = values.password,\n          confirmPassword = values.confirmPassword,\n          contact = values.contact,\n          name = values.name;\n    const dispatch = this.props.dispatch;\n    dispatch(Actions.register({\n      email,\n      password,\n      confirmPassword,\n      contact,\n      name\n    }));\n  }\n\n  render() {\n    const _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password,\n          contact = _this$state.contact,\n          name = _this$state.name,\n          confirmPassword = _this$state.confirmPassword,\n          respSuccess = _this$state.respSuccess,\n          respMessage = _this$state.respMessage;\n    let initialValues = {\n      email,\n      password,\n      contact,\n      name,\n      confirmPassword\n    };\n    const handleSubmit = this.handleSubmit,\n          handleClose = this.handleClose;\n    return React.createElement(RegisterView, {\n      initialValues: initialValues,\n      handleSubmit: handleSubmit,\n      handleClose: handleClose,\n      respSuccess: respSuccess,\n      respMessage: respMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapState = state => {\n  return {\n    register: state.registerResp\n  };\n};\n\nexport default connect(mapState)(Register);","map":{"version":3,"sources":["/home/santhosh/Desktop/auth-service/auth-service-client/src/Container/Register/register.js"],"names":["React","RegisterView","Actions","connect","Register","Component","constructor","props","handleClose","setState","respSuccess","state","email","password","contact","name","confirmPassword","errorMessage","respMessage","onClick","handleSubmit","bind","componentWillReceiveProps","nextProps","register","error","data","success","console","log","response","statusText","message","values","actions","dispatch","render","initialValues","mapState","registerResp"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport RegisterView from \"../../Components/RegisterView/registerView\"\nimport * as Actions from \"../../Actions\";\nimport { connect } from \"react-redux\";\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      contact: \"\",\n      name: '',\n      confirmPassword: '',\n      errorMessage: [],\n      respMessage : '',\n      respSuccess: false,\n      onClick: false,\n    }\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      nextProps.register &&\n      nextProps.register.error &&\n      nextProps.register.error.data &&\n      !nextProps.register.error.data.success\n    ) {\n      console.log(\"inside the nextProps\", nextProps.register.error.data)\n      this.setState({\n        respMessage: nextProps.register.error.data,\n        respSuccess: true\n      }, () => {\n        console.log(respMessage)\n      })\n    } else {\n      if (\n        nextProps.response &&\n        nextProps.register.data &&\n        nextProps.register.data.success &&\n        nextProps.register.statusText === 'Created'\n      ) {\n        this.setState({\n          respMessage: nextProps.register.data.message,\n          respSuccess: true\n        })\n      } else {\n        this.setState({\n          respMessage: nextProps.register.data.message,\n          respSuccess: true\n        })\n      }\n    }\n  }\n\n  handleSubmit(values, actions) {\n    console.log(\"inside the handle submit\", values)\n    const { email, password, confirmPassword, contact, name } = values\n    const { dispatch } = this.props\n    dispatch(Actions.register({ email, password, confirmPassword, contact, name }))\n  }\n\n  handleClose = () => {\n    this.setState({\n      respSuccess: false\n    })\n  }\n\n  render() {\n    const { email, password, contact, name, \n      confirmPassword, respSuccess, respMessage  } = this.state;\n    let initialValues = {\n      email, password, contact, name, confirmPassword\n    }\n    const { handleSubmit, handleClose } = this\n    return (\n      <RegisterView\n        initialValues={initialValues}\n        handleSubmit={handleSubmit}\n        handleClose   = {handleClose}\n        respSuccess   = {respSuccess}\n        respMessage   = {respMessage}\n      />\n    )\n  }\n}\n\n\nconst mapState = (state) => {\n  return {\n    register: state.registerResp\n  }\n}\n\nexport default connect(mapState)(Register)"]},"metadata":{},"sourceType":"module"}