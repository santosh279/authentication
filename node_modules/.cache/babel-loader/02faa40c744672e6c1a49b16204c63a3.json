{"ast":null,"code":"var _jsxFileName = \"/home/santhosh/Desktop/auth-service/auth-service-client/src/App.js\";\nimport React from 'react';\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { Redirect, Switch, BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Login from './Container/login/login';\nconst store = createStore(() => {});\n\nconst isAuth = () => {\n  let access_token = localStorage.getItem(\"access_token\");\n\n  if (access_token) {\n    return true;\n  }\n\n  return false;\n};\n\nfunction App() {\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, isAuth() ? React.createElement(Route, {\n    path: \"/welcome-page\",\n    component: () => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"welcome shit!!\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }) : React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: () => React.createElement(Redirect, {\n      to: \"/sign_in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/sign_in\",\n    component: Login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/santhosh/Desktop/auth-service/auth-service-client/src/App.js"],"names":["React","createStore","Provider","Redirect","Switch","BrowserRouter","Router","Route","Login","store","isAuth","access_token","localStorage","getItem","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,aAAa,IAAIC,MAA5C,EAAoDC,KAApD,QAAiE,kBAAjE;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAEA,MAAMC,KAAK,GAAGR,WAAW,CAAC,MAAM,CAAG,CAAV,CAAzB;;AAEA,MAAMS,MAAM,GAAG,MAAM;AACnB,MAAIC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAnB;;AACA,MAAIF,YAAJ,EAAkB;AAChB,WAAO,IAAP;AACD;;AACD,SAAO,KAAP;AACD,CAND;;AAQA,SAASG,GAAT,GAAe;AACb,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEL,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIC,MAAM,KACJ,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,eADP;AAEE,IAAA,SAAS,EAAE,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,gBAAN,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADI,GAKJ,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AACE,IAAA,MAAM,EACJ,MAAM,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPN,EAYE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,SAAS,EAAEF,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF,CADF,CADF;AAoBD;;AAED,eAAeM,GAAf","sourcesContent":["import React from 'react';\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { Redirect, Switch, BrowserRouter as Router, Route } from \"react-router-dom\"\nimport Login from './Container/login/login';\n\nconst store = createStore(() => { });\n\nconst isAuth = () => {\n  let access_token = localStorage.getItem(\"access_token\");\n  if (access_token) {\n    return true;\n  }\n  return false;\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Switch>\n          {\n            isAuth() ?\n              <Route\n                path=\"/welcome-page\"\n                component={() => <div>{\"welcome shit!!\"}</div>} />\n              :\n              <Route exact path=\"/\"\n                render={\n                  () => <Redirect to=\"/sign_in\" />\n                } />\n          }\n          <Route path=\"/sign_in\" component={Login} ></Route>\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}