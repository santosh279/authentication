{"ast":null,"code":"var _jsxFileName = \"/home/santhosh/Desktop/auth-service/auth-service-client/src/Components/LoginView/loginView.jsx\";\nimport React from \"react\";\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { Paper } from '@material-ui/core';\n\nconst LoginView = props => {\n  console.log(props.initialValues);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    initialValues: props.initialValues,\n    validationSchema: Yup.object().shape({\n      email: Yup.string().required('Email is required'),\n      password: Yup.string().min(5, 'Password must be at least 5 characters').required('Password is required')\n    }),\n    onSubmit: (values, actions) => {\n      props.handleSubmit(values, actions);\n      actions.resetForm();\n    },\n    render: ({\n      errors,\n      status,\n      touched\n    }) => React.createElement(\"div\", {\n      class: \"row\",\n      style: {\n        marginLeft: '130px',\n        marginTop: '50px',\n        marginRight: '-50px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      style: {\n        with: '10%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col-md-6 offset-md-3\",\n      style: {\n        maxWidth: '35%',\n        position: 'absolute'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Login\")), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Field, {\n      name: \"Email\",\n      type: \"email\",\n      className: 'form-control' + (errors.email && touched.email ? ' is-invalid' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"email\",\n      component: \"div\",\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Field, {\n      name: \"password\",\n      type: \"password\",\n      className: 'form-control' + (errors.password && touched.password ? ' is-invalid' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"password\",\n      component: \"div\",\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"b ph3 pv2 input-reset ba b--black bg-transparent  pointer f6 dib\",\n      type: \"submit\",\n      value: \"Sign in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"lh-copy mt3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/register\",\n      className: \"f6 link dim black db\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Sign up\"))))))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }));\n};\n\nexport default LoginView;","map":{"version":3,"sources":["/home/santhosh/Desktop/auth-service/auth-service-client/src/Components/LoginView/loginView.jsx"],"names":["React","Formik","Field","Form","ErrorMessage","Yup","Paper","LoginView","props","console","log","initialValues","object","shape","email","string","required","password","min","values","actions","handleSubmit","resetForm","errors","status","touched","marginLeft","marginTop","marginRight","with","maxWidth","position"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Formik, Field, Form, ErrorMessage } from 'formik'\nimport * as Yup from 'yup';\nimport { Paper } from '@material-ui/core'\n\nconst LoginView = (props) => {\n  console.log(props.initialValues)\n  return (\n    <React.Fragment>\n      <Formik\n        initialValues = { props.initialValues }\n        validationSchema={Yup.object().shape({\n          email: Yup.string().required('Email is required'),\n          password: Yup.string()\n            .min(5, 'Password must be at least 5 characters')\n            .required('Password is required')\n        })}\n        onSubmit={(values, actions) => {\n          props.handleSubmit(values, actions)\n          actions.resetForm()\n        }}\n        render={({ errors, status, touched }) => (\n          <div\n            class='row'\n            style={{\n              marginLeft: '130px',\n              marginTop: '50px',\n              marginRight: '-50px'\n            }}\n          >\n            <Paper style={{ with: '10%' }}>\n              <div\n                class='col-md-6 offset-md-3'\n                style={{ maxWidth: '35%', position: 'absolute' }}\n              >\n                <Form>\n                  <div>\n                    <h4>Login</h4>\n                  </div>\n                  <div className='form-group'>\n                    <label htmlFor='email'>Email</label>\n                    <Field\n                      name='Email'\n                      type='email'\n                      className={\n                        'form-control' +\n                        (errors.email && touched.email\n                          ? ' is-invalid'\n                          : '')\n                      }\n                    />\n                    <ErrorMessage\n                      name='email'\n                      component='div'\n                      className='invalid-feedback'\n                    />\n                  </div>\n                  <div className='form-group'>\n                    <label htmlFor='password'>Password</label>\n                    <Field\n                      name='password'\n                      type='password'\n                      className={\n                        'form-control' +\n                        (errors.password && touched.password\n                          ? ' is-invalid'\n                          : '')\n                      }\n                    />\n                    <ErrorMessage\n                      name='password'\n                      component='div'\n                      className='invalid-feedback'\n                    />\n                  </div>\n                  <div className='form-group'>\n                    <div className=''>\n                      <input\n                        className='b ph3 pv2 input-reset ba b--black bg-transparent  pointer f6 dib'\n                        type='submit'\n                        value='Sign in'\n                      />\n                    </div>\n                    <div className='lh-copy mt3'>\n                      <a href='/register' className='f6 link dim black db'>\n                        Sign up\n                      </a>\n                    </div>\n                  </div>\n                </Form>\n              </div>\n            </Paper>\n            {/* <Snackbar\n              anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n              onClose={this.handleClose}\n              open={this.state.respSuccess}\n              message={this.state.respMessage}\n              autoHideDuration={4000}\n            /> */}\n          </div>\n        )}\n      />\n    </React.Fragment>\n  )\n}\n\nexport default LoginView"]},"metadata":{},"sourceType":"module"}