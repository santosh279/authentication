{"ast":null,"code":"var _jsxFileName = \"/home/santhosh/Desktop/auth-service/auth-service-client/src/Container/MobileAuth/verifyOtp.js\";\nimport React from \"react\";\nimport * as Actions from \"../../Actions\";\nimport { connect } from \"react-redux\";\nimport VerifyOtp from \"../../Components/Mobile/verifyOtp\";\n\nclass CheckOtp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleVerifyOnSubmit = (values, actions) => {\n      const otp = values.otp;\n\n      const _localStorage$getItem = localStorage.getItem(\"contact\"),\n            contact = _localStorage$getItem.contact;\n\n      const dispatch = this.props.dispatch;\n      dispatch(Actions.verifyOtp({\n        contact,\n        otp\n      }));\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        respSuccess: false\n      });\n    };\n\n    this.state = {\n      otp: \"\",\n      contact: \"\",\n      respMessage: '',\n      respSuccess: false,\n      onClick: false,\n      verify: false\n    };\n    this.handleVerifyOnSubmit = this.handleVerifyOnSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      contact: localStorage.getItem(\"contact\")\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.verifyOtp && nextProps.verifyOtp.error && nextProps.verifyOtp.error.data && !nextProps.verifyOtp.error.data.success) {\n      this.setState({\n        respMessage: nextProps.verifyOtp.error.data.message ? nextProps.verifyOtp.error.data.message : nextProps.verifyOtp.error.data.error.message,\n        respSuccess: true\n      });\n    } else {\n      if (nextProps.verifyOtp && nextProps.verifyOtp.data && nextProps.verifyOtp.data.success) {\n        this.setState({\n          respMessage: nextProps.verifyOtp.data.message,\n          respSuccess: true,\n          verify: true,\n          contact: nextProps.verifyOtp.data.contact\n        });\n      } else {\n        this.setState({\n          respMessage: nextProps.verifyOtp.data.message,\n          respSuccess: true\n        });\n      }\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          contact = _this$state.contact,\n          respSuccess = _this$state.respSuccess,\n          respMessage = _this$state.respMessage,\n          otp = _this$state.otp;\n    let initialValues = {\n      otp\n    };\n    const handleClose = this.handleClose,\n          handleVerifyOnSubmit = this.handleVerifyOnSubmit;\n    return React.createElement(VerifyOtp, {\n      contact: contact,\n      initialValues: initialValues,\n      handleVerifyOnSubmit: handleVerifyOnSubmit,\n      respMessage: respMessage,\n      respSuccess: respSuccess,\n      handleClose: handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapState = state => {\n  return {\n    verifyOtp: state.verifyOtpResp\n  };\n};\n\nexport default connect(mapState)(CheckOtp);","map":{"version":3,"sources":["/home/santhosh/Desktop/auth-service/auth-service-client/src/Container/MobileAuth/verifyOtp.js"],"names":["React","Actions","connect","VerifyOtp","CheckOtp","Component","constructor","props","handleVerifyOnSubmit","values","actions","otp","localStorage","getItem","contact","dispatch","verifyOtp","handleClose","setState","respSuccess","state","respMessage","onClick","verify","bind","componentDidMount","componentWillReceiveProps","nextProps","error","data","success","message","render","initialValues","mapState","verifyOtpResp"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as Actions from \"../../Actions\";\nimport { connect } from \"react-redux\";\nimport VerifyOtp from \"../../Components/Mobile/verifyOtp\";\n\nclass CheckOtp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      otp : \"\",\n      contact: \"\",\n      respMessage: '',\n      respSuccess: false,\n      onClick: false,\n      verify : false\n\n    }\n    this.handleVerifyOnSubmit = this.handleVerifyOnSubmit.bind(this)\n  }\n\n  componentDidMount(){\n    this.setState({\n      contact : localStorage.getItem(\"contact\")\n    })\n  }\n  componentWillReceiveProps(nextProps) {\n    if (\n      nextProps.verifyOtp &&\n      nextProps.verifyOtp.error &&\n      nextProps.verifyOtp.error.data &&\n      !nextProps.verifyOtp.error.data.success\n    ) {\n      this.setState({\n        respMessage: nextProps.verifyOtp.error.data.message\n          ? nextProps.verifyOtp.error.data.message\n          : nextProps.verifyOtp.error.data.error.message,\n        respSuccess: true\n      })\n    } else {\n      if (\n       ( nextProps.verifyOtp &&\n        nextProps.verifyOtp.data &&\n        nextProps.verifyOtp.data.success)\n      ) {\n        this.setState({\n          respMessage: nextProps.verifyOtp.data.message,\n          respSuccess: true,\n          verify : true,\n          contact : nextProps.verifyOtp.data.contact\n        })\n\n      } else {\n        this.setState({\n          respMessage: nextProps.verifyOtp.data.message,\n          respSuccess: true\n        })\n      }\n    }\n  }\n\n  handleVerifyOnSubmit = (values, actions) => {\n    const { otp } = values\n    const { contact } = localStorage.getItem(\"contact\");\n    const { dispatch } = this.props\n    dispatch(Actions.verifyOtp({ contact, otp }))\n  }\n\n  handleClose = () => {\n    this.setState({\n      respSuccess: false\n    })\n  }\n\n  render() {\n    const { contact\n      , respSuccess, respMessage, otp } = this.state;\n    let  initialValues = { otp } \n    const { handleClose, handleVerifyOnSubmit } = this\n    return (\n      <VerifyOtp \n        contact              = { contact }\n        initialValues        = { initialValues }\n        handleVerifyOnSubmit = { handleVerifyOnSubmit }\n        respMessage          = { respMessage }\n        respSuccess          = { respSuccess }\n        handleClose          = { handleClose }\n      /> \n    )\n  }\n}\n\n\nconst mapState = (state) => {\n  return {\n    verifyOtp: state.verifyOtpResp\n  }\n}\n\nexport default connect(mapState)(CheckOtp)"]},"metadata":{},"sourceType":"module"}