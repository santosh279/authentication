{"ast":null,"code":"var _jsxFileName = \"/home/santhosh/Desktop/auth-service/auth-service-client/src/Container/login/login.js\";\nimport React from \"react\";\nimport * as Actions from \"../../Actions\";\nimport LoginView from \"../../Components/LoginView/loginView\";\nimport { connect } from \"react-redux\"; // import { bindActionCreators } from \"redux\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(values, actions) {\n    const email = values.email,\n          password = values.password;\n\n    if (email && password) {\n      this.props.login(email, password);\n    }\n  } // static getDerivedStateFromProps(nextProps, prevState) {\n  //   console.log(\"nextProps inside the loginPage\", nextProps)\n  // }\n\n\n  render() {\n    const _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n    const handleSubmit = this.handleSubmit;\n    let initialValues = {\n      email,\n      password\n    };\n    return React.createElement(LoginView, {\n      initialValues: initialValues,\n      handleSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    response: state.loginResp\n  };\n};\n\nconst mapDispatchToProps = {\n  login: Actions.login\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/santhosh/Desktop/auth-service/auth-service-client/src/Container/login/login.js"],"names":["React","Actions","LoginView","connect","Login","Component","constructor","props","state","email","password","handleSubmit","bind","values","actions","login","render","initialValues","mapStateToProps","response","loginResp","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,eAAzB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAACE,MAAD,EAASC,OAAT,EAAkB;AAAA,UACpBL,KADoB,GACAI,MADA,CACpBJ,KADoB;AAAA,UACbC,QADa,GACAG,MADA,CACbH,QADa;;AAE5B,QAAID,KAAK,IAAIC,QAAb,EAAuB;AACrB,WAAKH,KAAL,CAAWQ,KAAX,CAAiBN,KAAjB,EAAwBC,QAAxB;AACD;AACF,GAfiC,CAiBlC;AACA;AACA;;;AAEAM,EAAAA,MAAM,GAAG;AAAA,wBACqB,KAAKR,KAD1B;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,QADR,eACQA,QADR;AAAA,UAECC,YAFD,GAEkB,IAFlB,CAECA,YAFD;AAGP,QAAIM,aAAa,GAAG;AAClBR,MAAAA,KADkB;AACXC,MAAAA;AADW,KAApB;AAGA,WACE,oBAAC,SAAD;AACE,MAAA,aAAa,EAAEO,aADjB;AAEE,MAAA,YAAY,EAAEN,YAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAMD;;AAjCiC;;AAoCpC,MAAMO,eAAe,GAAIV,KAAD,IAAW;AACjC,SAAO;AACLW,IAAAA,QAAQ,EAAEX,KAAK,CAACY;AADX,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAG;AACzBN,EAAAA,KAAK,EAAGd,OAAO,CAACc;AADS,CAA3B;AAGA,eAAeZ,OAAO,CAACe,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CjB,KAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport * as Actions from \"../../Actions\"\nimport LoginView from \"../../Components/LoginView/loginView\";\nimport { connect } from \"react-redux\"\n// import { bindActionCreators } from \"redux\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: ''\n    }\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(values, actions) {\n    const { email, password } = values\n    if (email && password) {\n      this.props.login(email, password);\n    }\n  }\n\n  // static getDerivedStateFromProps(nextProps, prevState) {\n  //   console.log(\"nextProps inside the loginPage\", nextProps)\n  // }\n\n  render() {\n    const { email, password } = this.state;\n    const { handleSubmit } = this;\n    let initialValues = {\n      email, password\n    }\n    return (\n      <LoginView\n        initialValues={initialValues}\n        handleSubmit={handleSubmit}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    response: state.loginResp\n  }\n}\n\nconst mapDispatchToProps = {\n  login : Actions.login\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);"]},"metadata":{},"sourceType":"module"}