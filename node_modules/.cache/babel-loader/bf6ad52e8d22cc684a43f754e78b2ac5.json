{"ast":null,"code":"import _objectSpread from \"/home/santhosh/Desktop/auth-service/auth-service-client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as Types from \"../Actions/action.Types\";\nconst initialState = {\n  success: false,\n  error: {},\n  data: {}\n};\nexport const login = function (state = initialState, action) {\n  switch (action.type) {\n    case Types.LOGIN_SUCCESS:\n      return _objectSpread({}, initialState, {\n        success: true,\n        data: action.payload\n      });\n\n    case Types.LOGIN_FAIL:\n      return {\n        success: false,\n        error: action.payload\n      };\n\n    default:\n      {\n        return state;\n      }\n  }\n};\nexport const register = function (state = initialState, action) {\n  switch (action.type) {\n    case Types.REGISTER_SUCCESS:\n      return _objectSpread({}, initialState, {\n        success: true,\n        data: action.payload\n      });\n\n    case Types.REGISTER_FAIL:\n      return {\n        success: false,\n        error: action.payload\n      };\n\n    default:\n      {\n        return state;\n      }\n  }\n};\nexport const sendOtp = function (state = initialState, action) {\n  switch (action.type) {\n    case Types.SEND_OTP_SUCCESS:\n      return _objectSpread({}, initialState, {\n        success: true,\n        data: action.payload\n      });\n\n    case Types.SEND_OTP_FAIL:\n      return {\n        success: false,\n        error: action.payload\n      };\n\n    default:\n      {\n        return state;\n      }\n  }\n};\nexport const verifyOtp = function (state = initialState, action) {\n  switch (action.type) {\n    case Types.VERIFY_OTP_SUCCESS:\n      return _objectSpread({}, initialState, {\n        success: true,\n        data: action.payload\n      });\n\n    case Types.VERIFY_OTP_FAIL:\n      return {\n        success: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/santhosh/Desktop/auth-service/auth-service-client/src/Reducers/auth.reducer.js"],"names":["Types","initialState","success","error","data","login","state","action","type","LOGIN_SUCCESS","payload","LOGIN_FAIL","register","REGISTER_SUCCESS","REGISTER_FAIL","sendOtp","SEND_OTP_SUCCESS","SEND_OTP_FAIL","verifyOtp","VERIFY_OTP_SUCCESS","VERIFY_OTP_FAIL"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,yBAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,KAAK,EAAE,EAFY;AAGnBC,EAAAA,IAAI,EAAE;AAHa,CAArB;AAMA,OAAO,MAAMC,KAAK,GAAG,UAAUC,KAAK,GAAGL,YAAlB,EAAgCM,MAAhC,EAAwC;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,KAAK,CAACS,aAAX;AACE,+BACKR,YADL;AAEEC,QAAAA,OAAO,EAAE,IAFX;AAGEE,QAAAA,IAAI,EAAEG,MAAM,CAACG;AAHf;;AAKF,SAAKV,KAAK,CAACW,UAAX;AACE,aAAO;AACLT,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,KAAK,EAAEI,MAAM,CAACG;AAFT,OAAP;;AAIF;AAAS;AACP,eAAOJ,KAAP;AACD;AAdH;AAgBD,CAjBM;AAmBP,OAAO,MAAMM,QAAQ,GAAG,UAAUN,KAAK,GAAGL,YAAlB,EAAgCM,MAAhC,EAAwC;AAC9D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,KAAK,CAACa,gBAAX;AACE,+BACKZ,YADL;AAEEC,QAAAA,OAAO,EAAE,IAFX;AAGEE,QAAAA,IAAI,EAAEG,MAAM,CAACG;AAHf;;AAKF,SAAKV,KAAK,CAACc,aAAX;AACE,aAAO;AACLZ,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,KAAK,EAAEI,MAAM,CAACG;AAFT,OAAP;;AAIF;AAAS;AACP,eAAOJ,KAAP;AACD;AAdH;AAgBD,CAjBM;AAmBP,OAAO,MAAMS,OAAO,GAAG,UAAUT,KAAK,GAAGL,YAAlB,EAAgCM,MAAhC,EAAwC;AAC7D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,KAAK,CAACgB,gBAAX;AACE,+BACKf,YADL;AAEEC,QAAAA,OAAO,EAAE,IAFX;AAGEE,QAAAA,IAAI,EAAEG,MAAM,CAACG;AAHf;;AAKF,SAAKV,KAAK,CAACiB,aAAX;AACE,aAAO;AACLf,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,KAAK,EAAEI,MAAM,CAACG;AAFT,OAAP;;AAIF;AAAS;AACP,eAAOJ,KAAP;AACD;AAdH;AAgBD,CAjBM;AAmBP,OAAO,MAAMY,SAAS,GAAG,UAAUZ,KAAK,GAAGL,YAAlB,EAAgCM,MAAhC,EAAwC;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,KAAK,CAACmB,kBAAX;AACE,+BACKlB,YADL;AAEEC,QAAAA,OAAO,EAAE,IAFX;AAGEE,QAAAA,IAAI,EAAEG,MAAM,CAACG;AAHf;;AAKF,SAAKV,KAAK,CAACoB,eAAX;AACE,aAAO;AACLlB,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,KAAK,EAAEI,MAAM,CAACG;AAFT,OAAP;;AAIF;AACE,aAAOJ,KAAP;AAbJ;AAeD,CAhBM","sourcesContent":["import * as Types from \"../Actions/action.Types\";\n\nconst initialState = {\n  success: false,\n  error: {},\n  data: {}\n}\n\nexport const login = function (state = initialState, action) {\n  switch (action.type) {\n    case Types.LOGIN_SUCCESS:\n      return {\n        ...initialState,\n        success: true,\n        data: action.payload\n      }\n    case Types.LOGIN_FAIL:\n      return {\n        success: false,\n        error: action.payload\n      }\n    default: {\n      return state\n    }\n  }\n}\n\nexport const register = function (state = initialState, action) {\n  switch (action.type) {\n    case Types.REGISTER_SUCCESS:\n      return {\n        ...initialState,\n        success: true,\n        data: action.payload\n      }\n    case Types.REGISTER_FAIL:\n      return {\n        success: false,\n        error: action.payload\n      }\n    default: {\n      return state\n    }\n  }\n}\n\nexport const sendOtp = function (state = initialState, action) {\n  switch (action.type) {\n    case Types.SEND_OTP_SUCCESS:\n      return {\n        ...initialState,\n        success: true,\n        data: action.payload\n      }\n    case Types.SEND_OTP_FAIL:\n      return {\n        success: false,\n        error: action.payload\n      }\n    default: {\n      return state\n    }\n  }\n}\n\nexport const verifyOtp = function (state = initialState, action) {\n  switch (action.type) {\n    case Types.VERIFY_OTP_SUCCESS:\n      return {\n        ...initialState,\n        success: true,\n        data: action.payload\n      }\n    case Types.VERIFY_OTP_FAIL:\n      return {\n        success: false,\n        error: action.payload\n      }\n    default:\n      return state\n  }\n}"]},"metadata":{},"sourceType":"module"}